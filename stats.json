{"leetcode":{"easy":9,"hard":1,"medium":14,"shas":{"0037-sudoku-solver":{"0037-sudoku-solver.ts":"53bc04819fd9a0ff10c99cb745eecd60e3ce5983","README.md":"12d474652c8632d9f27f1d5e7ca522b37a314c9e","difficulty":"hard"},"README.md":{"":"5667f43ed559b12ae16155efc250f5e20d3ecb76"},"0094-binary-tree-inorder-traversal":{"0094-binary-tree-inorder-traversal.ts":"9a7b8645967fd527abc6b4f7bbc3ed7cd42fd6c4","README.md":"bd34dc7858ef18ca0298bb98d645a48123cf98b8","difficulty":"easy"},"stats.json":{"":"798b2cfa772a49dffe444215737459d7c3e6420f"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.ts":"291c3187b06886519051146523f02c0945cda819","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"0100-same-tree":{"0100-same-tree.ts":"47f5fe446d421109b95ccc7c52241f77f73db2e7","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.ts":"2bc16bdcf5036d9409dc0be3f0398cda9bc68909","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.ts":"8928565edd1a886c002a64431b34a975d1ac59ab","README.md":"1496517dcf0faedc819cbdf10d07de1900d95d9c","difficulty":"easy"},"0257-binary-tree-paths":{"0257-binary-tree-paths.ts":"abb7573b856bdc12217646205c120e30c212e7d3","README.md":"d0a5987303eae22716aa5ff4aac834c26f236bf8","difficulty":"easy"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.ts":"e8ce0affebdb5ebaa8d4c0851150682726bbb817","README.md":"2e410057370d1340e00c05396cfa7ccd934457ff","difficulty":"medium"},"0226-invert-binary-tree":{"0226-invert-binary-tree.ts":"19bad6ee1fef8a4a110f9c92fa6db05962580d41","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0101-symmetric-tree":{"0101-symmetric-tree.ts":"66a49d5eda7b6e75b6289666ff431cc98efa9be5","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.ts":"bb47fbd76d25d5a33f46d86127a3d76d036c1cf3","README.md":"fcd20aa2bad60f78f450527d135d90bfbc83d83a","difficulty":"medium"},"0102-binary-tree-level-order-traversal":{"0102-binary-tree-level-order-traversal.ts":"0abe35d14fab9413e6dc51416bb9c29c51d2855f","README.md":"01b65fdfcb1f1937ab9e22e5e3338d581c1423eb","difficulty":"medium"},"0199-binary-tree-right-side-view":{"0199-binary-tree-right-side-view.ts":"d5b3cc4d80e486115d1652686f4d59a69535fac0","README.md":"e5e81cc2d06e4177eb353566d3a36bebd1431bab","difficulty":"medium"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.ts":"da7e0e9a7cec856cf0348a5229f779975764505f","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0112-path-sum":{"0112-path-sum.ts":"8273dc991e3f56036c91d78413c134b9c8563093","README.md":"98772e551dafb6d42f9d932cfe0bd4fdf77d93d6","difficulty":"easy"},"0113-path-sum-ii":{"0113-path-sum-ii.ts":"a3da53d6af23e228147078fe10894d62a2370326","README.md":"20bc8fdf97e213e5f14e6750518274598a2e796a","difficulty":"medium"},"0437-path-sum-iii":{"0437-path-sum-iii.ts":"34d5c76aea5140ff1235d43600b59838bcb44c06","README.md":"75f14191505570e173d1fce1d4feda8f9734fd88","difficulty":"medium"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.ts":"e917c60f8ed9f08c3b7cf9ed89d624991bf0591a","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"0002-add-two-numbers":{"0002-add-two-numbers.java":"18182e8d9b1502d4ae7e694924a81b77dab667bb","README.md":"466f5e31bfeb151e70b5b325c379cf04183ebb57","difficulty":"medium"},"0783-search-in-a-binary-search-tree":{"0783-search-in-a-binary-search-tree.ts":"9970c4730f3627ee9a60310e7e464dfed3aa22ee","README.md":"0ebb87b67c966c7015765bd0dd9990eb6353574f","difficulty":"easy"},"0784-insert-into-a-binary-search-tree":{"0784-insert-into-a-binary-search-tree.ts":"e779f5c064ef18126ddfb16d6224f46f8bde155a","README.md":"f0477736fdf23ae1d38f735c19e178f3f1e507ac","difficulty":"medium"},"2456-construct-smallest-number-from-di-string":{"2456-construct-smallest-number-from-di-string.ts":"da8e05a3552bfae086863b46aca94e909beac0fc","README.md":"21841a0a03c296d304bf839c4adee79011cb19c0","difficulty":"medium"},"0450-delete-node-in-a-bst":{"0450-delete-node-in-a-bst.ts":"be4434af0cb67cd51118e9acd028f1aa63305ed1","README.md":"1ef2f1339cd85e1edf8016b90985db104ce6302b","difficulty":"medium"},"1516-the-k-th-lexicographical-string-of-all-happy-strings-of-length-n":{"1516-the-k-th-lexicographical-string-of-all-happy-strings-of-length-n.ts":"46603f21a1c189e6ef17c41d8bcb7836a6036686","README.md":"74b9d9e1b6446b5be7ad47bc14343df8d9ecc958","difficulty":"medium"},"0235-lowest-common-ancestor-of-a-binary-search-tree":{"0235-lowest-common-ancestor-of-a-binary-search-tree.ts":"08f7fab9bfaa7e0e50dd261452e8bb1cc1721e70","README.md":"ccc587c35bb4f030d4cc146967eb49e7a922b6ce","difficulty":"medium"}},"solved":24}}